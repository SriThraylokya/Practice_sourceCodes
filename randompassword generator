import java.util.Random;
import java.util.Scanner;

public class RandomPasswordGenerator {

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    Random random = new Random();

    System.out.println("Enter the length of the password:");
    int length = scanner.nextInt();

    System.out.println("Do you want to include lowercase letters? (y/n)");
    boolean includeLowercase = scanner.next().equalsIgnoreCase("y");

    System.out.println("Do you want to include uppercase letters? (y/n)");
    boolean includeUppercase = scanner.next().equalsIgnoreCase("y");

    System.out.println("Do you want to include numbers? (y/n)");
    boolean includeNumbers = scanner.next().equalsIgnoreCase("y");

    System.out.println("Do you want to include symbols? (y/n)");
    boolean includeSymbols = scanner.next().equalsIgnoreCase("y");

    String lowercaseLetters = "abcdefghijklmnopqrstuvwxyz";
    String uppercaseLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    String numbers = "0123456789";
    String symbols = "!@#$%^&*()_+-=";
    StringBuilder password = new StringBuilder();

    if (includeLowercase) {
      password.append(getRandomSubstring(lowercaseLetters, length));
    }

    if (includeUppercase) {
      password.append(getRandomSubstring(uppercaseLetters, length));
    }

    if (includeNumbers) {
      password.append(getRandomSubstring(numbers, length));
    }

    if (includeSymbols) {
      password.append(getRandomSubstring(symbols, length));
    }

    if (password.length() < length) {
      password.append(getRandomSubstring(lowercaseLetters + uppercaseLetters + numbers + symbols, length - password.length()));
    }

    System.out.println();
    System.out.println("Your randomly generated password is: " + shuffle(password.toString()));

    scanner.close();
  }

  private static String getRandomSubstring(String string, int length) {
    Random random = new Random();
    StringBuilder sb = new StringBuilder();

    for (int i = 0; i < length; i++) {
      int index = random.nextInt(string.length());
      sb.append(string.charAt(index));
    }

    return sb.toString();
  }

  private static String shuffle(String string) {
    List<Character> characters = new ArrayList<>();

    for (char c : string.toCharArray()) {
      characters.add(c);
    }

    Collections.shuffle(characters);

    StringBuilder sb = new StringBuilder();

    for (char c : characters) {
      sb.append(c);
    }

    return sb.toString();
  }
}